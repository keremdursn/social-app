version: "3"

services:

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx_gateway
  #   ports:
  #     - "8080:80"    # Nginx'in 8080 portunu host ile bağla
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf   # Kendi nginx.conf dosyanı mount et
  #   networks:
  #     - appnetwork
  
  # appGateway:
  #   build:
  #     context: ./appGateway
  #   container_name: gateway
  #   restart: always
  #   working_dir: /app
  #   volumes:
  #     - ./appGateway:/app
  #   ports:
  #     - "9095:9095"
  #   depends_on:
  #     - auth
  #     - backend
  #   networks:
  #     - appnetwork

  auth:
    build:
      context: ./auth
    container_name: auth
    restart: no
    working_dir: /app
    volumes:
      - ./auth:/app
      - ./.emv:/app/.env
    ports:
      - "8080:8080"
    networks:
      - appnetwork

  post:
    build:
      context: ./post
    container_name: post
    restart: no
    working_dir: /app
    volumes:
      - ./post:/app
      - ./.env:/app/.env
    ports:
      - "8081:8081"
    networks:
      - appnetwork

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: 
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgre_data:/var/lib/postgresql/data
    networks:
      - appnetwork
  
  # portainer:
  #   image: portainer/portainer-ce
  #   ports: 
  #     - "9000:9000"
  #   volumes:
  #     - //./pipe/docker_engine://./pipe/docker_engine
  #     - portainer_data:/data
  #   restart: always
  #   networks:
  #     - appnetwork

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - appnetwork

volumes:
  postgre_data:
  # portainer_data:

networks:
  appnetwork:
    driver: bridge